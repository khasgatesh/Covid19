{"version":3,"sources":["components/cards/cards.module.css","components/cards/cards.jsx","api/index.js","components/charts/Charts.jsx","components/countrypicker/Countrypicker.jsx","App.js","index.js","App.module.css","components/charts/charts.module.css","components/countrypicker/countrypicker.module.css","images/covid.png"],"names":["module","exports","cards","data","confirmed","recovered","deaths","lastUpdate","className","styles","container","Grid","spacing","justify","item","component","Card","xs","md","cx","card","infected","CardContent","Typography","color","gutterBottom","variant","start","end","value","duration","separator","Date","toDateString","url","fetchData","country","a","changableurl","axios","get","console","log","fetchDailyData","modifiedData","map","dailyData","total","date","reportDate","fetchcountries","countries","name","Charts","useState","setDailyData","useEffect","fetchApI","lineChart","length","labels","datasets","label","borderColor","fill","backgroundColor","barchart","options","legend","display","title","text","Countrypicker","handlecountrychange","fetchedCountries","setFetchedCountries","fetchapi","FormControl","formcontrol","NativeSelect","defaultValue","onChange","e","target","i","key","App","state","fetchedData","setState","fetcheddata","this","image","src","coronaImage","alt","React","Component","ReactDom","render","document","getElementById"],"mappings":"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","file":"static/js/main.93cbf2c9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"cards_container__3PjwW\",\"card\":\"cards_card__2L4-M\",\"infected\":\"cards_infected__3F_JA\",\"recovered\":\"cards_recovered__37n8G\",\"deaths\":\"cards_deaths__3ejg1\"};","import React from 'react';\r\nimport {Card,CardContent,Typography,Grid} from '@material-ui/core';\r\nimport styles from '../cards/cards.module.css';\r\nimport cx from 'classnames';\r\nimport CountUp from 'react-countup';\r\nconst cards=({data:{confirmed,recovered,deaths,lastUpdate}})=>{\r\n    if(!confirmed){\r\n        return 'Loading...'\r\n    }\r\n   return(\r\n     <div className={styles.container}>\r\n         <Grid container spacing={3} justify=\"center\">\r\n             <Grid item component={Card} xs={12} md={3}  className={cx(styles.card, styles.infected)}>\r\n                 <CardContent>\r\n                     <Typography color=\"textSecondary\" gutterBottom>\r\n                             Infected\r\n                     </Typography>\r\n                     <Typography variant=\"h5\">\r\n                         <CountUp start={0} end={confirmed.value} duration={2} separator=\",\"></CountUp>\r\n                     </Typography>\r\n                     <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n                     <Typography variant=\"body2\" >Number of Active Cases of COVID-19</Typography>\r\n                 </CardContent>\r\n                 </Grid>\r\n\r\n                 <Grid item component={Card} xs={12} md={3}  className={cx(styles.card, styles.recovered)}>\r\n                 <CardContent>\r\n                     <Typography color=\"textSecondary\" gutterBottom>\r\n                             Recovered\r\n                     </Typography>\r\n                     <Typography variant=\"h5\">\r\n                     <CountUp start={0} end={recovered.value} duration={2} separator=\",\"></CountUp>\r\n                     </Typography>\r\n                     <Typography color=\"textSecondary\">\r\n                     {new Date(lastUpdate).toDateString()}\r\n                     </Typography>\r\n                     <Typography variant=\"body2\" >Number of recoveries from COVID-19</Typography>\r\n                 </CardContent>\r\n\r\n                 </Grid>\r\n                 <Grid item component={Card} xs={12} md={3}  className={cx(styles.card, styles.deaths)}>\r\n                 <CardContent>\r\n                     <Typography color=\"textSecondary\" gutterBottom>\r\n                             Deaths\r\n                     </Typography>\r\n                     <Typography variant=\"h5\">\r\n                     <CountUp start={0} end={deaths.value} duration={2} separator=\",\"></CountUp>\r\n                     </Typography>\r\n                     <Typography color=\"textSecondary\">\r\n                     {new Date(lastUpdate).toDateString()}\r\n                     </Typography>\r\n                     <Typography variant=\"body2\" >Number of Deaths from COVID-19</Typography>\r\n                 </CardContent>\r\n                 </Grid>\r\n\r\n         </Grid>\r\n     </div>\r\n   );\r\n}\r\n\r\nexport default cards;\r\n","import axios from 'axios';\r\n\r\nconst url=\"https://covid19.mathdro.id/api\";\r\n\r\nexport const fetchData= async (country)=>{\r\nlet changableurl=url;\r\nif(country){\r\n    changableurl=`${url}/countries/${country}`\r\n}\r\n    try{\r\n            const {data:{confirmed,recovered,deaths,lastUpdate}}= await axios.get(changableurl);\r\n           \r\n                 \r\n            \r\n            return {confirmed, recovered,deaths,lastUpdate}\r\n\r\n\r\n           \r\n    }catch(error){\r\n            console.log(error)\r\n    }\r\n\r\n}\r\n\r\nexport const fetchDailyData= async ()=>{\r\n    try{\r\n         \r\n             const {data}=await axios.get(`${url}/daily`);\r\n          const modifiedData= data.map((dailyData)=>({\r\n              confirmed:dailyData.confirmed.total,\r\n              deaths:dailyData.deaths.total,\r\n              date:dailyData.reportDate,\r\n          }))\r\n          return modifiedData\r\n\r\n    }catch(error){\r\n\r\n    }\r\n}\r\n\r\nexport const fetchcountries =async ()=>{\r\n    try{\r\n       \r\n        const {data:{countries}}= await axios.get(`${url}/countries`);\r\n           \r\n\r\n             return countries.map((country)=>country.name)\r\n    }catch(error){\r\n                console.log(error)\r\n    }\r\n}","import React,{useState,useEffect} from 'react';\r\nimport {fetchDailyData} from '../../api';\r\nimport{Line,Bar} from 'react-chartjs-2';\r\nimport styles from '../charts/charts.module.css';\r\nconst Charts=({data:{confirmed,recovered,deaths},country})=>{\r\n   const [dailyData,setDailyData]=useState([]);\r\n\r\n   useEffect(()=>{\r\n       const fetchApI= async()=>{\r\n                  setDailyData( await fetchDailyData());\r\n       }\r\n      \r\n       fetchApI();\r\n   },[]);\r\n\r\n   const  lineChart=(\r\n        dailyData.length ? \r\n        (<Line\r\n           data={{\r\n               labels:dailyData.map(({date})=>date),\r\n               datasets:[{\r\n                   data:dailyData.map(({confirmed})=>confirmed),\r\n                   label:'Infected',\r\n                   borderColor:'#3333f',\r\n                   fill:true\r\n               },{\r\n                data:dailyData.map(({deaths})=>deaths),\r\n                label:'Deaths',\r\n                borderColor:'#3333f',\r\n                backgroundColor:'rgba(255,0,0,0.5)',\r\n                fill:true\r\n               }],\r\n           }}\r\n         \r\n         \r\n         />) : null\r\n   )\r\n    console.log(confirmed,recovered,deaths)\r\nconst barchart=(\r\n    confirmed\r\n    ? (\r\n        <Bar\r\n         data={{\r\n             labels:['Infected','Recovered','Deaths'],\r\n             datasets:[{\r\n                 label:'People',\r\n                 backgroundColor:['rgba(0,0,255,0.5)','rgba(0,255,0,0.5)','rgba(255,0,0,0.5)'],\r\n                 data:[confirmed.value,recovered.value,deaths.value]\r\n             }]\r\n         }}\r\n         options={{\r\n             legend:{display:false},\r\n             title:{display:true, text:`current status in ${country}`}\r\n         }}\r\n        />\r\n    ):null\r\n)\r\n  \r\n   return(\r\n     <div className={styles.container}>\r\n      {country ? barchart:lineChart}\r\n     </div>\r\n   )\r\n}\r\n\r\nexport default Charts;","import React,{useState,useEffect} from 'react';\r\nimport {NativeSelect,FormControl} from '@material-ui/core';\r\nimport styles from '../countrypicker/countrypicker.module.css';\r\nimport {fetchcountries} from '../../api';\r\nconst Countrypicker=({handlecountrychange})=>{\r\nconst [fetchedCountries,setFetchedCountries]=useState([])\r\n    useEffect(()=>{\r\n         const fetchapi= async ()=>{\r\n                   setFetchedCountries(await fetchcountries())\r\n         }\r\n         fetchapi(); \r\n    },[setFetchedCountries]);\r\n\r\n   return(\r\n     <FormControl className={styles.formcontrol}>\r\n         <NativeSelect defaultValue=\"\" onChange={(e)=>handlecountrychange(e.target.value)}>\r\n             <option value=\"\">Global</option>\r\n             {fetchedCountries.map ((country,i)=><option key={i} value={country}>{country}</option>)}\r\n         </NativeSelect>\r\n     </FormControl>\r\n   )\r\n}\r\n\r\nexport default Countrypicker;","import React from 'react';\r\n\r\nimport {Cards,Charts,Countrypicker} from './components';\r\n\r\nimport styles from './App.module.css';\r\nimport {fetchData} from './api';\r\nimport coronaImage from './images/covid.png';\r\nclass App extends React.Component{\r\n  state={\r\n    data:{},\r\n    country:'',\r\n  }\r\n\r\n async componentDidMount(){\r\n    const fetcheddata= await fetchData();\r\n   \r\n    this.setState({data:fetcheddata})\r\n  }\r\n\r\n  handlecountrychange=async(country)=>{\r\n    const fetchedData= await fetchData(country);\r\n    \r\n  \r\n    this.setState({data:fetchedData,country:country})\r\n  }\r\n  \r\n  render(){\r\n    const {data,country}=this.state; \r\n      return(\r\n          <div className={styles.container}>\r\n            <img className={styles.image} src={coronaImage} alt=\"covid19\"/>\r\n            <Cards data={data}/>\r\n            <Countrypicker handlecountrychange={this.handlecountrychange}/>\r\n            <Charts data={data} country={country}/>\r\n          \r\n          </div>\r\n          \r\n          \r\n      )\r\n  }   \r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDom from 'react-dom'; \r\n \r\nimport App from './App';\r\n\r\nReactDom.render(<App/>,document.getElementById('root'));","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__2llA9\",\"image\":\"App_image__1Rg5l\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"charts_container__1Zym7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formcontrol\":\"countrypicker_formcontrol__9M2_i\"};","module.exports = __webpack_public_path__ + \"static/media/covid.d7265326.png\";"],"sourceRoot":""}